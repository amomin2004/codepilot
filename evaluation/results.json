{
  "timestamp": "2025-10-16 18:49:50",
  "individual_results": [
    {
      "query_id": "auth_001",
      "query": "How do I validate JWT tokens in FastAPI?",
      "category": "authentication",
      "difficulty": "medium",
      "precision_at_5": 0.0,
      "precision_at_10": 0.3333333333333333,
      "reciprocal_rank": 0.1,
      "latency_ms": 353.6338806152344,
      "expected_files_found": [
        "security/http.py"
      ],
      "top_5_results": [
        {
          "path": "routing.py",
          "score": 0.6264765858650208,
          "lang": "python",
          "start_line": 2991,
          "end_line": 3070
        },
        {
          "path": "applications.py",
          "score": 0.6263739466667175,
          "lang": "python",
          "start_line": 3446,
          "end_line": 3525
        },
        {
          "path": "applications.py",
          "score": 0.5998682975769043,
          "lang": "python",
          "start_line": 1951,
          "end_line": 2030
        },
        {
          "path": "exception_handlers.py",
          "score": 0.5960161685943604,
          "lang": "python",
          "start_line": 1,
          "end_line": 34
        },
        {
          "path": "routing.py",
          "score": 0.582119882106781,
          "lang": "python",
          "start_line": 2081,
          "end_line": 2160
        }
      ]
    },
    {
      "query_id": "auth_002",
      "query": "Where is HTTP Basic authentication implemented?",
      "category": "authentication",
      "difficulty": "easy",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 1.0,
      "latency_ms": 56.520938873291016,
      "expected_files_found": [
        "security/http.py",
        "security/http.py",
        "security/http.py",
        "security/http.py",
        "security/http.py",
        "security/http.py",
        "security/http.py"
      ],
      "top_5_results": [
        {
          "path": "security/http.py",
          "score": 0.7486532330513,
          "lang": "python",
          "start_line": 131,
          "end_line": 210
        },
        {
          "path": "security/http.py",
          "score": 0.7356052398681641,
          "lang": "python",
          "start_line": 196,
          "end_line": 275
        },
        {
          "path": "security/http.py",
          "score": 0.7280942797660828,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        },
        {
          "path": "security/http.py",
          "score": 0.6937622427940369,
          "lang": "python",
          "start_line": 391,
          "end_line": 423
        },
        {
          "path": "security/http.py",
          "score": 0.6354049444198608,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        }
      ]
    },
    {
      "query_id": "auth_003",
      "query": "How do I handle API key authentication?",
      "category": "authentication",
      "difficulty": "easy",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 1.0,
      "latency_ms": 17.282962799072266,
      "expected_files_found": [
        "security/api_key.py",
        "security/api_key.py",
        "security/api_key.py",
        "security/api_key.py",
        "security/api_key.py"
      ],
      "top_5_results": [
        {
          "path": "security/api_key.py",
          "score": 0.8482197523117065,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        },
        {
          "path": "security/api_key.py",
          "score": 0.7781192064285278,
          "lang": "python",
          "start_line": 261,
          "end_line": 288
        },
        {
          "path": "security/__init__.py",
          "score": 0.778061032295227,
          "lang": "python",
          "start_line": 1,
          "end_line": 15
        },
        {
          "path": "security/api_key.py",
          "score": 0.7205739617347717,
          "lang": "python",
          "start_line": 131,
          "end_line": 210
        },
        {
          "path": "security/api_key.py",
          "score": 0.7135344743728638,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        }
      ]
    },
    {
      "query_id": "routing_001",
      "query": "How do I define API routes with path parameters?",
      "category": "routing",
      "difficulty": "easy",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 0.5,
      "latency_ms": 40.26198387145996,
      "expected_files_found": [
        "routing.py",
        "routing.py",
        "routing.py",
        "routing.py",
        "routing.py",
        "routing.py"
      ],
      "top_5_results": [
        {
          "path": "applications.py",
          "score": 0.9283838272094727,
          "lang": "python",
          "start_line": 1496,
          "end_line": 1575
        },
        {
          "path": "routing.py",
          "score": 0.9088995456695557,
          "lang": "python",
          "start_line": 716,
          "end_line": 795
        },
        {
          "path": "applications.py",
          "score": 0.8742104768753052,
          "lang": "python",
          "start_line": 911,
          "end_line": 990
        },
        {
          "path": "routing.py",
          "score": 0.8504027128219604,
          "lang": "python",
          "start_line": 911,
          "end_line": 990
        },
        {
          "path": "routing.py",
          "score": 0.837059736251831,
          "lang": "python",
          "start_line": 1951,
          "end_line": 2030
        }
      ]
    },
    {
      "query_id": "routing_002",
      "query": "Where are WebSocket routes handled?",
      "category": "routing",
      "difficulty": "medium",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 1.0,
      "latency_ms": 17.163991928100586,
      "expected_files_found": [
        "routing.py",
        "routing.py",
        "routing.py",
        "routing.py",
        "routing.py",
        "routing.py"
      ],
      "top_5_results": [
        {
          "path": "routing.py",
          "score": 0.7443349361419678,
          "lang": "python",
          "start_line": 1106,
          "end_line": 1185
        },
        {
          "path": "routing.py",
          "score": 0.641655445098877,
          "lang": "python",
          "start_line": 1171,
          "end_line": 1250
        },
        {
          "path": "applications.py",
          "score": 0.5955533385276794,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        },
        {
          "path": "routing.py",
          "score": 0.5708064436912537,
          "lang": "python",
          "start_line": 456,
          "end_line": 535
        },
        {
          "path": "applications.py",
          "score": 0.561510443687439,
          "lang": "python",
          "start_line": 1301,
          "end_line": 1380
        }
      ]
    },
    {
      "query_id": "routing_003",
      "query": "How do I add middleware to routes?",
      "category": "routing",
      "difficulty": "medium",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 1.0,
      "latency_ms": 14.735221862792969,
      "expected_files_found": [
        "routing.py",
        "routing.py",
        "routing.py",
        "routing.py",
        "routing.py"
      ],
      "top_5_results": [
        {
          "path": "routing.py",
          "score": 0.5980268716812134,
          "lang": "python",
          "start_line": 911,
          "end_line": 990
        },
        {
          "path": "routing.py",
          "score": 0.5502776503562927,
          "lang": "python",
          "start_line": 1106,
          "end_line": 1185
        },
        {
          "path": "applications.py",
          "score": 0.5345247983932495,
          "lang": "python",
          "start_line": 456,
          "end_line": 535
        },
        {
          "path": "routing.py",
          "score": 0.5307662487030029,
          "lang": "python",
          "start_line": 716,
          "end_line": 795
        },
        {
          "path": "applications.py",
          "score": 0.5106481313705444,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        }
      ]
    },
    {
      "query_id": "middleware_001",
      "query": "Where is CORS middleware implemented?",
      "category": "middleware",
      "difficulty": "easy",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 19.1800594329834,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "routing.py",
          "score": 0.3444793224334717,
          "lang": "python",
          "start_line": 261,
          "end_line": 340
        },
        {
          "path": "applications.py",
          "score": 0.31347566843032837,
          "lang": "python",
          "start_line": 456,
          "end_line": 535
        },
        {
          "path": "applications.py",
          "score": 0.28664854168891907,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        },
        {
          "path": "applications.py",
          "score": 0.27772700786590576,
          "lang": "python",
          "start_line": 976,
          "end_line": 1055
        },
        {
          "path": "middleware/asyncexitstack.py",
          "score": 0.2655659019947052,
          "lang": "python",
          "start_line": 1,
          "end_line": 18
        }
      ]
    },
    {
      "query_id": "middleware_002",
      "query": "How do I add custom middleware to FastAPI?",
      "category": "middleware",
      "difficulty": "medium",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 1.0,
      "latency_ms": 16.27492904663086,
      "expected_files_found": [
        "applications.py",
        "applications.py",
        "applications.py",
        "applications.py"
      ],
      "top_5_results": [
        {
          "path": "applications.py",
          "score": 0.852878987789154,
          "lang": "python",
          "start_line": 1366,
          "end_line": 1445
        },
        {
          "path": "routing.py",
          "score": 0.8503293991088867,
          "lang": "python",
          "start_line": 3641,
          "end_line": 3720
        },
        {
          "path": "routing.py",
          "score": 0.8478388786315918,
          "lang": "python",
          "start_line": 2341,
          "end_line": 2420
        },
        {
          "path": "routing.py",
          "score": 0.8272516131401062,
          "lang": "python",
          "start_line": 1756,
          "end_line": 1835
        },
        {
          "path": "routing.py",
          "score": 0.8217769265174866,
          "lang": "python",
          "start_line": 1951,
          "end_line": 2030
        }
      ]
    },
    {
      "query_id": "validation_001",
      "query": "Where is request body validation handled?",
      "category": "validation",
      "difficulty": "medium",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 0.3333333333333333,
      "latency_ms": 17.075061798095703,
      "expected_files_found": [
        "routing.py",
        "routing.py",
        "routing.py"
      ],
      "top_5_results": [
        {
          "path": "exception_handlers.py",
          "score": 0.7155088186264038,
          "lang": "python",
          "start_line": 1,
          "end_line": 34
        },
        {
          "path": "dependencies/utils.py",
          "score": 0.6861467957496643,
          "lang": "python",
          "start_line": 976,
          "end_line": 1051
        },
        {
          "path": "routing.py",
          "score": 0.6740708351135254,
          "lang": "python",
          "start_line": 326,
          "end_line": 405
        },
        {
          "path": "exceptions.py",
          "score": 0.6156072616577148,
          "lang": "python",
          "start_line": 131,
          "end_line": 176
        },
        {
          "path": "routing.py",
          "score": 0.5565028190612793,
          "lang": "python",
          "start_line": 586,
          "end_line": 665
        }
      ]
    },
    {
      "query_id": "validation_002",
      "query": "How do I validate query parameters?",
      "category": "validation",
      "difficulty": "easy",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 25.423049926757812,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "openapi/models.py",
          "score": 0.5527074337005615,
          "lang": "python",
          "start_line": 326,
          "end_line": 405
        },
        {
          "path": "applications.py",
          "score": 0.546316921710968,
          "lang": "python",
          "start_line": 2536,
          "end_line": 2615
        },
        {
          "path": "routing.py",
          "score": 0.5435293912887573,
          "lang": "python",
          "start_line": 1691,
          "end_line": 1770
        },
        {
          "path": "dependencies/utils.py",
          "score": 0.5397452712059021,
          "lang": "python",
          "start_line": 521,
          "end_line": 600
        },
        {
          "path": "param_functions.py",
          "score": 0.534899890422821,
          "lang": "python",
          "start_line": 586,
          "end_line": 665
        }
      ]
    },
    {
      "query_id": "error_001",
      "query": "Where are HTTP exceptions defined?",
      "category": "error_handling",
      "difficulty": "easy",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 0.3333333333333333,
      "latency_ms": 14.817953109741211,
      "expected_files_found": [
        "exceptions.py",
        "exceptions.py"
      ],
      "top_5_results": [
        {
          "path": "security/http.py",
          "score": 0.5744577646255493,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        },
        {
          "path": "exception_handlers.py",
          "score": 0.5681782364845276,
          "lang": "python",
          "start_line": 1,
          "end_line": 34
        },
        {
          "path": "exceptions.py",
          "score": 0.5597386956214905,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        },
        {
          "path": "security/oauth2.py",
          "score": 0.521294355392456,
          "lang": "python",
          "start_line": 586,
          "end_line": 653
        },
        {
          "path": "security/http.py",
          "score": 0.5097525715827942,
          "lang": "python",
          "start_line": 261,
          "end_line": 340
        }
      ]
    },
    {
      "query_id": "error_002",
      "query": "How do I handle validation errors?",
      "category": "error_handling",
      "difficulty": "medium",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 0.3333333333333333,
      "latency_ms": 12.714862823486328,
      "expected_files_found": [
        "exception_handlers.py"
      ],
      "top_5_results": [
        {
          "path": "_compat/v1.py",
          "score": 0.6346009969711304,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        },
        {
          "path": "_compat/v2.py",
          "score": 0.5882067084312439,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        },
        {
          "path": "exception_handlers.py",
          "score": 0.5474586486816406,
          "lang": "python",
          "start_line": 1,
          "end_line": 34
        },
        {
          "path": "applications.py",
          "score": 0.5417991280555725,
          "lang": "python",
          "start_line": 976,
          "end_line": 1055
        },
        {
          "path": "_compat/v1.py",
          "score": 0.5323271751403809,
          "lang": "python",
          "start_line": 196,
          "end_line": 275
        }
      ]
    },
    {
      "query_id": "websocket_001",
      "query": "How do I create WebSocket connections?",
      "category": "websockets",
      "difficulty": "easy",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 11.775016784667969,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "routing.py",
          "score": 0.6924833655357361,
          "lang": "python",
          "start_line": 1106,
          "end_line": 1185
        },
        {
          "path": "exceptions.py",
          "score": 0.6115759611129761,
          "lang": "python",
          "start_line": 131,
          "end_line": 176
        },
        {
          "path": "exceptions.py",
          "score": 0.5995813608169556,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        },
        {
          "path": "applications.py",
          "score": 0.5720497965812683,
          "lang": "python",
          "start_line": 976,
          "end_line": 1055
        },
        {
          "path": "routing.py",
          "score": 0.5697460174560547,
          "lang": "python",
          "start_line": 456,
          "end_line": 535
        }
      ]
    },
    {
      "query_id": "websocket_002",
      "query": "Where is WebSocket message handling implemented?",
      "category": "websockets",
      "difficulty": "medium",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 14.497756958007812,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "applications.py",
          "score": 0.69640052318573,
          "lang": "python",
          "start_line": 1301,
          "end_line": 1380
        },
        {
          "path": "routing.py",
          "score": 0.6874710321426392,
          "lang": "python",
          "start_line": 1171,
          "end_line": 1250
        },
        {
          "path": "routing.py",
          "score": 0.6851709485054016,
          "lang": "python",
          "start_line": 1106,
          "end_line": 1185
        },
        {
          "path": "routing.py",
          "score": 0.6783351302146912,
          "lang": "python",
          "start_line": 131,
          "end_line": 210
        },
        {
          "path": "routing.py",
          "score": 0.6426244974136353,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        }
      ]
    },
    {
      "query_id": "deps_001",
      "query": "How does dependency injection work in FastAPI?",
      "category": "dependencies",
      "difficulty": "hard",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 11.589288711547852,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "param_functions.py",
          "score": 0.7385156750679016,
          "lang": "python",
          "start_line": 2211,
          "end_line": 2290
        },
        {
          "path": "routing.py",
          "score": 0.718862771987915,
          "lang": "python",
          "start_line": 1886,
          "end_line": 1965
        },
        {
          "path": "security/oauth2.py",
          "score": 0.7087202668190002,
          "lang": "python",
          "start_line": 391,
          "end_line": 470
        },
        {
          "path": "applications.py",
          "score": 0.697823166847229,
          "lang": "python",
          "start_line": 2731,
          "end_line": 2810
        },
        {
          "path": "param_functions.py",
          "score": 0.6946340799331665,
          "lang": "python",
          "start_line": 2276,
          "end_line": 2355
        }
      ]
    },
    {
      "query_id": "deps_002",
      "query": "Where are dependency resolvers implemented?",
      "category": "dependencies",
      "difficulty": "hard",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 1.0,
      "latency_ms": 12.157917022705078,
      "expected_files_found": [
        "dependencies/utils.py",
        "dependencies/utils.py",
        "dependencies/utils.py",
        "dependencies/utils.py"
      ],
      "top_5_results": [
        {
          "path": "dependencies/utils.py",
          "score": 0.3762374520301819,
          "lang": "python",
          "start_line": 586,
          "end_line": 665
        },
        {
          "path": "dependencies/utils.py",
          "score": 0.3710153102874756,
          "lang": "python",
          "start_line": 131,
          "end_line": 210
        },
        {
          "path": "dependencies/utils.py",
          "score": 0.3571303188800812,
          "lang": "python",
          "start_line": 261,
          "end_line": 340
        },
        {
          "path": "routing.py",
          "score": 0.33770737051963806,
          "lang": "python",
          "start_line": 1886,
          "end_line": 1965
        },
        {
          "path": "dependencies/utils.py",
          "score": 0.3330077826976776,
          "lang": "python",
          "start_line": 651,
          "end_line": 730
        }
      ]
    },
    {
      "query_id": "openapi_001",
      "query": "How is OpenAPI schema generated?",
      "category": "openapi",
      "difficulty": "medium",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 13.350725173950195,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "param_functions.py",
          "score": 0.9576713442802429,
          "lang": "python",
          "start_line": 1821,
          "end_line": 1900
        },
        {
          "path": "applications.py",
          "score": 0.9426100850105286,
          "lang": "python",
          "start_line": 1041,
          "end_line": 1120
        },
        {
          "path": "routing.py",
          "score": 0.9247016310691833,
          "lang": "python",
          "start_line": 3251,
          "end_line": 3330
        },
        {
          "path": "routing.py",
          "score": 0.9198895692825317,
          "lang": "python",
          "start_line": 2211,
          "end_line": 2290
        },
        {
          "path": "applications.py",
          "score": 0.9178275465965271,
          "lang": "python",
          "start_line": 3706,
          "end_line": 3785
        }
      ]
    },
    {
      "query_id": "openapi_002",
      "query": "Where are API documentation endpoints defined?",
      "category": "openapi",
      "difficulty": "easy",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 14.281034469604492,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "routing.py",
          "score": 0.7436860203742981,
          "lang": "python",
          "start_line": 2211,
          "end_line": 2290
        },
        {
          "path": "routing.py",
          "score": 0.7377194762229919,
          "lang": "python",
          "start_line": 1821,
          "end_line": 1900
        },
        {
          "path": "routing.py",
          "score": 0.7355895638465881,
          "lang": "python",
          "start_line": 4096,
          "end_line": 4175
        },
        {
          "path": "applications.py",
          "score": 0.7293112277984619,
          "lang": "python",
          "start_line": 196,
          "end_line": 275
        },
        {
          "path": "security/api_key.py",
          "score": 0.705231249332428,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        }
      ]
    },
    {
      "query_id": "testing_001",
      "query": "How do I create test clients for FastAPI?",
      "category": "testing",
      "difficulty": "easy",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 13.427972793579102,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "applications.py",
          "score": 0.8942702412605286,
          "lang": "python",
          "start_line": 2601,
          "end_line": 2680
        },
        {
          "path": "routing.py",
          "score": 0.8769546151161194,
          "lang": "python",
          "start_line": 2341,
          "end_line": 2420
        },
        {
          "path": "routing.py",
          "score": 0.8669901490211487,
          "lang": "python",
          "start_line": 1756,
          "end_line": 1835
        },
        {
          "path": "routing.py",
          "score": 0.8498337864875793,
          "lang": "python",
          "start_line": 4031,
          "end_line": 4110
        },
        {
          "path": "routing.py",
          "score": 0.841626763343811,
          "lang": "python",
          "start_line": 1301,
          "end_line": 1380
        }
      ]
    },
    {
      "query_id": "app_001",
      "query": "How do I create a FastAPI application instance?",
      "category": "routing",
      "difficulty": "easy",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 0.5,
      "latency_ms": 12.056827545166016,
      "expected_files_found": [
        "applications.py",
        "applications.py",
        "applications.py",
        "applications.py",
        "applications.py",
        "applications.py",
        "applications.py",
        "applications.py"
      ],
      "top_5_results": [
        {
          "path": "routing.py",
          "score": 0.8716573119163513,
          "lang": "python",
          "start_line": 1301,
          "end_line": 1380
        },
        {
          "path": "applications.py",
          "score": 0.8477748036384583,
          "lang": "python",
          "start_line": 911,
          "end_line": 990
        },
        {
          "path": "applications.py",
          "score": 0.8290231227874756,
          "lang": "python",
          "start_line": 131,
          "end_line": 210
        },
        {
          "path": "applications.py",
          "score": 0.7745782732963562,
          "lang": "python",
          "start_line": 1366,
          "end_line": 1445
        },
        {
          "path": "applications.py",
          "score": 0.770374059677124,
          "lang": "python",
          "start_line": 1041,
          "end_line": 1120
        }
      ]
    },
    {
      "query_id": "app_002",
      "query": "Where are application startup events handled?",
      "category": "routing",
      "difficulty": "medium",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 0.5,
      "latency_ms": 14.600038528442383,
      "expected_files_found": [
        "applications.py",
        "applications.py",
        "applications.py",
        "applications.py",
        "applications.py",
        "applications.py"
      ],
      "top_5_results": [
        {
          "path": "routing.py",
          "score": 0.5902817845344543,
          "lang": "python",
          "start_line": 846,
          "end_line": 925
        },
        {
          "path": "applications.py",
          "score": 0.5841363072395325,
          "lang": "python",
          "start_line": 4551,
          "end_line": 4630
        },
        {
          "path": "applications.py",
          "score": 0.5052870512008667,
          "lang": "python",
          "start_line": 521,
          "end_line": 600
        },
        {
          "path": "routing.py",
          "score": 0.44700887799263,
          "lang": "python",
          "start_line": 4486,
          "end_line": 4517
        },
        {
          "path": "applications.py",
          "score": 0.4112392067909241,
          "lang": "python",
          "start_line": 911,
          "end_line": 990
        }
      ]
    },
    {
      "query_id": "response_001",
      "query": "How do I customize response models?",
      "category": "validation",
      "difficulty": "medium",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 17.177104949951172,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "applications.py",
          "score": 0.6374602913856506,
          "lang": "python",
          "start_line": 1431,
          "end_line": 1510
        },
        {
          "path": "routing.py",
          "score": 0.6167435646057129,
          "lang": "python",
          "start_line": 1236,
          "end_line": 1315
        },
        {
          "path": "utils.py",
          "score": 0.5994853377342224,
          "lang": "python",
          "start_line": 66,
          "end_line": 145
        },
        {
          "path": "routing.py",
          "score": 0.5704075694084167,
          "lang": "python",
          "start_line": 2731,
          "end_line": 2810
        },
        {
          "path": "applications.py",
          "score": 0.5537490844726562,
          "lang": "python",
          "start_line": 1691,
          "end_line": 1770
        }
      ]
    },
    {
      "query_id": "param_001",
      "query": "Where are path parameter validators defined?",
      "category": "validation",
      "difficulty": "easy",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 17.08388328552246,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "param_functions.py",
          "score": 0.7034607529640198,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        },
        {
          "path": "param_functions.py",
          "score": 0.6746963262557983,
          "lang": "python",
          "start_line": 651,
          "end_line": 730
        },
        {
          "path": "dependencies/utils.py",
          "score": 0.6298211812973022,
          "lang": "python",
          "start_line": 456,
          "end_line": 535
        },
        {
          "path": "applications.py",
          "score": 0.6224462985992432,
          "lang": "python",
          "start_line": 2926,
          "end_line": 3005
        },
        {
          "path": "param_functions.py",
          "score": 0.6046485900878906,
          "lang": "python",
          "start_line": 1626,
          "end_line": 1705
        }
      ]
    },
    {
      "query_id": "header_001",
      "query": "How do I extract headers from requests?",
      "category": "validation",
      "difficulty": "easy",
      "precision_at_5": 0.0,
      "precision_at_10": 0.0,
      "reciprocal_rank": 0.0,
      "latency_ms": 13.98015022277832,
      "expected_files_found": [],
      "top_5_results": [
        {
          "path": "exception_handlers.py",
          "score": 0.6782453656196594,
          "lang": "python",
          "start_line": 1,
          "end_line": 34
        },
        {
          "path": "security/api_key.py",
          "score": 0.6607879996299744,
          "lang": "python",
          "start_line": 131,
          "end_line": 210
        },
        {
          "path": "security/http.py",
          "score": 0.6374226808547974,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        },
        {
          "path": "security/oauth2.py",
          "score": 0.5860291123390198,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        },
        {
          "path": "security/api_key.py",
          "score": 0.5736615657806396,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        }
      ]
    },
    {
      "query_id": "cookie_001",
      "query": "Where is cookie parameter handling implemented?",
      "category": "validation",
      "difficulty": "easy",
      "precision_at_5": 1.0,
      "precision_at_10": 1.0,
      "reciprocal_rank": 0.3333333333333333,
      "latency_ms": 16.477108001708984,
      "expected_files_found": [
        "params.py",
        "params.py"
      ],
      "top_5_results": [
        {
          "path": "security/api_key.py",
          "score": 0.5213550329208374,
          "lang": "python",
          "start_line": 196,
          "end_line": 275
        },
        {
          "path": "dependencies/utils.py",
          "score": 0.5182739496231079,
          "lang": "python",
          "start_line": 196,
          "end_line": 275
        },
        {
          "path": "params.py",
          "score": 0.4658653438091278,
          "lang": "python",
          "start_line": 391,
          "end_line": 470
        },
        {
          "path": "params.py",
          "score": 0.45719113945961,
          "lang": "python",
          "start_line": 1,
          "end_line": 80
        },
        {
          "path": "openapi/models.py",
          "score": 0.4286598563194275,
          "lang": "python",
          "start_line": 326,
          "end_line": 405
        }
      ]
    }
  ]
}