version: '3.8'

services:
  # CodePilot API Backend (Production)
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: codepilot-api-prod
    ports:
      - "8000:8000"
    volumes:
      # Mount output directory to persist index and chunks
      - codepilot_data:/app/output
      # Mount data directory for sample repositories
      - codepilot_data:/app/data
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
      - WORKERS=4
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # CodePilot Frontend (Production)
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: codepilot-web-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      api:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: codepilot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - web
    restart: always

# Named volumes for persistence
volumes:
  codepilot_data:
    driver: local

# Network for service communication
networks:
  default:
    name: codepilot-prod-network
